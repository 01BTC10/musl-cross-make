#
# config.mak.dist - sample musl-cross-make configuration
#
# Copy to config.mak and edit as desired.
#

# There is no default TARGET; you must select one here or on the make
# command line. Some examples:

# TARGET = i486-linux-musl
# TARGET = x86_64-linux-musl
# TARGET = arm-linux-musleabi
# TARGET = arm-linux-musleabihf
# TARGET = sh2eb-linux-muslfdpic
# ...

# By default, cross compilers are installed to ./output under the top-level
# musl-cross-make directory and can later be moved wherever you want them.
# To install directly to a specific location, set it here. Multiple targets
# can safely be installed in the same location. Some examples:

# OUTPUT = /opt/cross
# OUTPUT = /usr/local

# By default, latest supported release versions of musl and the toolchain
# components are used. You can override those here, but the version selected
# must be supported (under hashes/ and patches/) to work. For musl, you
# can use "git-refname" (e.g. git-master) instead of a release.

# BINUTILS_VER = 2.25.1
# GCC_VER = 5.2.0
# MUSL_VER = git-master

# Recommended options for faster/simpler build:

# COMMON_CONFIG += --disable-nls
# COMMON_CONFIG += MAKEINFO=/bin/false
# GCC_CONFIG += --enable-languages=c,c++
# GCC_CONFIG += --disable-libquadmath --disable-decimal-float
# GCC_CONFIG += --disable-multilib

# The following are options needed to make certain targets work right.
# They may be moved to main build logic rather than config.mak at some
# point in the future.

ifeq ($(TARGET),sh2eb-linux-muslfdpic)
GCC_CONFIG += --with-cpu=mj2
GCC_CONFIG += --enable-fdpic
endif

ifeq ($(TARGET),mips64-linux-musl)
GCC_CONFIG += --with-abi=64
endif

ifeq ($(TARGET),arm-linux-musleabihf)
GCC_CONFIG += --with-float=hard
endif
